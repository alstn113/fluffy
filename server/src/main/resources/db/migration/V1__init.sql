-- PostgreSQL

CREATE TABLE IF NOT EXISTS MEMBER
(
    ID         BIGINT GENERATED BY DEFAULT AS IDENTITY,
    NAME       VARCHAR(255) NOT NULL,
    EMAIL      VARCHAR(255),
    AVATAR_URL VARCHAR(255) NOT NULL,
    SOCIAL_ID  VARCHAR(255) NOT NULL,
    PROVIDER   VARCHAR(20)  NOT NULL,
    CREATED_AT TIMESTAMP(6) NOT NULL,
    UPDATED_AT TIMESTAMP(6) NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS EXAM
(
    ID          BIGINT GENERATED BY DEFAULT AS IDENTITY,
    MEMBER_ID   BIGINT       NOT NULL,
    TITLE       VARCHAR(255) NOT NULL,
    DESCRIPTION VARCHAR(255) NOT NULL,
    STATUS      VARCHAR(20)  NOT NULL,
    CREATED_AT  TIMESTAMP(6) NOT NULL,
    START_AT    TIMESTAMP(6),
    END_AT      TIMESTAMP(6),
    UPDATED_AT  TIMESTAMP(6) NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS ANSWER
(
    ID            BIGINT GENERATED BY DEFAULT AS IDENTITY,
    QUESTION_ID   BIGINT NOT NULL,
    SUBMISSION_ID BIGINT,
    TEXT          VARCHAR(255),
    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS ANSWER_CHOICE
(
    ANSWER_ID          BIGINT NOT NULL,
    QUESTION_OPTION_ID BIGINT NOT NULL
);

CREATE TABLE IF NOT EXISTS QUESTION
(
    ID             BIGINT GENERATED BY DEFAULT AS IDENTITY,
    EXAM_ID        BIGINT,
    TEXT           VARCHAR(255) NOT NULL,
    CORRECT_ANSWER VARCHAR(255),
    TYPE           VARCHAR(50)  NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS QUESTION_OPTION
(
    ID          BIGINT GENERATED BY DEFAULT AS IDENTITY,
    QUESTION_ID BIGINT,
    TEXT        VARCHAR(255) NOT NULL,
    IS_CORRECT  BOOLEAN      NOT NULL,
    PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS SUBMISSION
(
    ID         BIGINT GENERATED BY DEFAULT AS IDENTITY,
    EXAM_ID    BIGINT       NOT NULL,
    MEMBER_ID  BIGINT       NOT NULL,
    CREATED_AT TIMESTAMP(6) NOT NULL,
    UPDATED_AT TIMESTAMP(6) NOT NULL,
    PRIMARY KEY (ID)
);

ALTER TABLE IF EXISTS ANSWER
    ADD CONSTRAINT FK_SUBMISSION
        FOREIGN KEY (SUBMISSION_ID)
            REFERENCES SUBMISSION (ID);

ALTER TABLE IF EXISTS ANSWER_CHOICE
    ADD CONSTRAINT FK_ANSWER
        FOREIGN KEY (ANSWER_ID)
            REFERENCES ANSWER (ID);

ALTER TABLE IF EXISTS QUESTION
    ADD CONSTRAINT FK_EXAM
        FOREIGN KEY (EXAM_ID)
            REFERENCES EXAM (ID);

ALTER TABLE IF EXISTS QUESTION_OPTION
    ADD CONSTRAINT FK_QUESTION
        FOREIGN KEY (QUESTION_ID)
            REFERENCES QUESTION (ID);
